package model.room;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import connection_database.DatabaseConnection;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;

public class RoomDAO {
	public ObservableList<Room> getAllRooms() {
        String sql = "SELECT * FROM rooms";
        ObservableList<Room> roomList = FXCollections.observableArrayList();

        try (Connection conn = DatabaseConnection.getConnection();
             Statement stmt = conn.createStatement();
             ResultSet resultSet = stmt.executeQuery(sql)) {

            while (resultSet.next()) {
                Room room = new Room();
                room.setRoomid(resultSet.getString("roomid"));  
                room.setAddress(resultSet.getString("address"));   
                room.setStatus(resultSet.getString("status"));  
                
                roomList.add(room); 
            }

        } catch (SQLException e) {
            e.printStackTrace();
        }
        return roomList;
    }
	
	public void insertRoom(String roomid, String address, String status) {
		String sql = "INSERT INTO rooms (roomid, address, status) VALUES (?, ?, ?)";
		
	    try (Connection conn = DatabaseConnection.getConnection();
		         PreparedStatement pstmt = conn.prepareStatement(sql)) {

		        pstmt.setString(1, roomid);
		        pstmt.setString(2, address);
		        pstmt.setString(3, status);
		        
		        int affectedRows = pstmt.executeUpdate();
		        
	            if (affectedRows > 0) {
	                System.out.println("Insert completed!");
	            } else {
	                System.out.println("Error insert!");
	            }
		    } catch (SQLException e) {
		        e.printStackTrace();
		    }
	}
	
	public void updateRoom(String roomid, String newRoomid, String address, String status) {
	    String sql = "UPDATE rooms SET roomid = ?, address = ?, status = ? WHERE roomid = ?";

	    try (Connection conn = DatabaseConnection.getConnection();
	         PreparedStatement pstmt = conn.prepareStatement(sql)) {
	        
	        pstmt.setString(1, newRoomid);
	        pstmt.setString(2, address);
	        pstmt.setString(3, status);
	        pstmt.setString(4, roomid);

	        int affectedRows = pstmt.executeUpdate();

	        if (affectedRows > 0) {
	            System.out.println("Update successful!");
	        } else {
	            System.out.println("Error updating room!");
	        }

	    } catch (SQLException e) {
	        e.printStackTrace();
	    }
	}
	
	public void deleteRoom(String roomid) {
	    String sql = "DELETE FROM rooms WHERE roomid = ?";

	    try (Connection conn = DatabaseConnection.getConnection();
	         PreparedStatement pstmt = conn.prepareStatement(sql)) {

	        pstmt.setString(1, roomid);

	        int affectedRows = pstmt.executeUpdate();

	        if (affectedRows > 0) {
	            System.out.println("Delete successful!");
	        } else {
	            System.out.println("Error deleting Room! Room not found.");
	        }

	    } catch (SQLException e) {
	        e.printStackTrace();
	    }
	}
}
