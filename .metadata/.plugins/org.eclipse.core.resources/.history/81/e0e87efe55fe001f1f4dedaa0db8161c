package controller;

import java.time.LocalDate;
import java.time.YearMonth;

import javafx.fxml.FXML;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.layout.GridPane;
import javafx.scene.text.Text;

public class CalendarController2 {
	@FXML
	private Text monthYearText;
	@FXML
	private Button lastMonthButton;
	@FXML
	private Button nextMonthButton;
	
	@FXML 
	private GridPane calendarGrid;
	
	private YearMonth currentMonth;
	
    @FXML
    private void initialize() {
        if (this.currentMonth == null) {
            this.currentMonth = YearMonth.now();
        }
        updateCalendar();
    }

    @FXML
    private void handleLastMonth() {
        currentMonth = currentMonth.minusMonths(1);
        updateCalendar();
    }

    @FXML
    private void handleNextMonth() {
        currentMonth = currentMonth.plusMonths(1);
        updateCalendar();
    }
    
    private void updateCalendar() {
    	calendarGrid.getChildren().removeIf(node -> GridPane.getRowIndex(node) != null && GridPane.getRowIndex(node) > 1);
    	monthYearText.setText(currentMonth.getMonth().toString() + " " + currentMonth.getYear());
    	
    	// Lấy ngày đầu tháng và số ngày trong tháng
        LocalDate firstDayOfMonth = currentMonth.atDay(1);
        int daysInMonth = currentMonth.lengthOfMonth();
        int firstDayColumn = firstDayOfMonth.getDayOfWeek().getValue() - 1;
        LocalDate today = LocalDate.now(); // Ngày hiện tại

        int row = 2;
        for (int day = 1; day <= daysInMonth; day++) {
            final int selectedDay = day;
            LocalDate currentDate = firstDayOfMonth.plusDays(selectedDay - 1);
            
            Button dayButton = new Button(String.valueOf(selectedDay));
            dayButton.setPrefSize(40, 40);

            // Kiểm tra nếu là Chủ nhật thì tô màu xanh
            if (currentDate.getDayOfWeek().getValue() == 7) { 
                dayButton.setStyle("-fx-background-color: blue; -fx-text-fill: white; -fx-font-weight: bold;");
            }

            // Nếu là ngày hôm nay thì tô màu đỏ
            if (currentDate.equals(today)) {
                dayButton.setStyle("-fx-background-color: red; -fx-text-fill: white; -fx-font-weight: bold;");
            }

            dayButton.setOnAction(event -> showDayInfo(currentDate));

            calendarGrid.add(dayButton, firstDayColumn, row);

            firstDayColumn++;
            if (firstDayColumn == 7) {
                firstDayColumn = 0;
                row++;
            }
        }
    	
    	 
    	
    }
    
    private void showDayInfo(LocalDate date) {
        Alert alert = new Alert(Alert.AlertType.INFORMATION);
        alert.setTitle("Thông Tin Ngày");
        alert.setHeaderText("Ngày bạn chọn: " + date);
        alert.setContentText("Thêm thông tin chi tiết về ngày này tại đây...");
        alert.showAndWait();
    }
}
