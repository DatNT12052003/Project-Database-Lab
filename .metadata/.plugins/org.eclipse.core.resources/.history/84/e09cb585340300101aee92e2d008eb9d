package model.schedule;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import connection_database.DatabaseConnection;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import model.room.Room;

public class ScheduleDAO {
	public ObservableList<Schedule> getAllSchedules() {
        String sql = "SELECT * FROM schedules";
        ObservableList<Schedule> scheduleList = FXCollections.observableArrayList();

        try (Connection conn = DatabaseConnection.getConnection();
             Statement stmt = conn.createStatement();
             ResultSet resultSet = stmt.executeQuery(sql)) {

            while (resultSet.next()) {
                Schedule schedule = new Schedule();
                schedule.setScheduleid(resultSet.getString("scheduleid"));  
                schedule.setDay(resultSet.getString("day")); 
                schedule.setTimeStart(resultSet.getString("timestart"));
                schedule.setTimeEnd(resultSet.getString("timeend"));  
                
                scheduleList.add(schedule); 
            }

        } catch (SQLException e) {
            e.printStackTrace();
        }
        return scheduleList;
    }
	
	private int getCountRoomOff() {
		int count = 0;
		String sql = "SELECT COUNT(*) FROM rooms WHERE roomid LIKE 'OFF%'";
		
		try(Connection conn = DatabaseConnection.getConnection();
	             Statement stmt = conn.createStatement();
	             ResultSet result = stmt.executeQuery(sql)){
			
			if (result.next()) {
                count = result.getInt(1);
            }

		}catch(SQLException e) {
			e.printStackTrace();
		}
		return count;
	}
	
	private String generateScheduleId(String day) {
	    int count = 0;
	    String d3 = "";

	    switch (day) {
	        case "Monday":
	            d3 = "MON";
	            break;
	        case "Tuesday":
	            d3 = "TUE";
	            break;
	        case "Wednesday":
	            d3 = "WED";
	            break;
	        case "Thursday":
	            d3 = "THU";
	            break;
	        case "Friday":
	            d3 = "FRI";
	            break;
	        case "Saturday":
	            d3 = "SAT";
	            break;
	        case "Sunday":
	            d3 = "SUN";
	            break;
	        default:
	            throw new IllegalArgumentException("Invalid day: " + day);
	    }

	    String sql = "SELECT COUNT(*) FROM rooms WHERE roomid LIKE ?";

	    try (Connection conn = DatabaseConnection.getConnection();
	         PreparedStatement pstmt = conn.prepareStatement(sql)) {

	        pstmt.setString(1, d3 + "%"); // Fix lỗi LIKE

	        ResultSet result = pstmt.executeQuery();
	        if (result.next()) {
	            count = result.getInt(1);
	        }
	    } catch (SQLException e) {
	        e.printStackTrace();
	    }

	    // Nếu muốn bắt đầu từ 1 thay vì 0, tăng count lên 1
	    String scheduleId = d3 + String.format("%02d", count + 1);

	    return scheduleId;
	}
}
