package controller.teacher.courses.teaching;

import java.util.Optional;

import controller.admin.management.schedules.SchedulesSceneController;
import javafx.beans.property.SimpleIntegerProperty;
import javafx.beans.property.SimpleStringProperty;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.fxml.FXML;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.control.ButtonType;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.text.Text;
import javafx.stage.Stage;
import model.course.Course;
import model.course.CourseDAO;
import model.person.Student;
import model.person.StudentDAO;
import model.person.TeacherDAO;
import model.room.RoomDAO;
import model.schedule.Schedule;
import model.schedule.ScheduleDAO;
import model.study.Study;
import model.study.StudyDAO;
import model.subject.SubjectDAO;
import model.user_login.UserLogin;

public class RollCallPopUpController {
	
	private Course courseItem;
	
	@FXML
	private Text courseidText;
	
	@FXML
	private Text dateText;
	
	@FXML
	private Text numberText;
	
	@FXML
	private Text totalStudentText;
	
	@FXML
	private TableView<Study> studentsTable;
	
	@FXML
	private TableColumn<Study, String> studentidColumn;
	
	@FXML
	private TableColumn<Study, String> fullNameColumn;
	
	@FXML
	private TableColumn<Study, Integer> numberOfAbsencesColumn;
	
	@FXML
	private TableColumn<Study, Boolean> presentColumn;
	
	@FXML
	private Button backButton;
	
	@FXML
	private Button okButton;
	
	private CourseDAO courseDAO = new CourseDAO();
	
	private TeacherDAO teacherDAO = new TeacherDAO();
	
	private SubjectDAO subjectDAO = new SubjectDAO();
	
	private RoomDAO roomDAO = new RoomDAO();
	
	private ScheduleDAO scheduleDAO = new ScheduleDAO();
	
	private StudyDAO studyDAO = new StudyDAO();
	
	private StudentDAO studentDAO = new StudentDAO();
	
	private ObservableList<Schedule> scheduleList = FXCollections.observableArrayList();
	
	private ObservableList<Student> studentList = FXCollections.observableArrayList();
	
	private ObservableList<Study> studyList = FXCollections.observableArrayList();
    
    private DetailCoursePopUpController detailCoursePopUpController;

    public void setDetailCoursePopUpController(DetailCoursePopUpController detailCoursePopUpController) {
        this.detailCoursePopUpController = detailCoursePopUpController;
    }
	
	public DetailCoursePopUpController getDetailCoursePopUpController() {
		return detailCoursePopUpController;
	}
	
	
	public void setData(Course courseItem) {
		this.courseItem = courseItem;
		
		courseidText.setText(courseItem.getCourseid());
		
		scheduleList = scheduleDAO.getScheduleByCourseid(courseItem.getCourseid());
		studentList = studentDAO.getAllStudentByCourseid(courseItem.getCourseid());
		studyList =  studyDAO.getAllStudyByCourseid(courseItem.getCourseid());
		System.out.println(studyList);
		
		studentidColumn.setCellValueFactory(cellData -> 
	    new SimpleStringProperty(cellData.getValue().getStudent().getStudentid()));
		studentidColumn.setStyle("-fx-alignment: CENTER;");

		
		fullNameColumn.setCellValueFactory(cellData -> 
	    new SimpleStringProperty(cellData.getValue().getStudent().getFullName()));
		fullNameColumn.setStyle("-fx-alignment: CENTER;");
		
		numberOfAbsencesColumn.setCellValueFactory(new PropertyValueFactory<>("numberOfAbsences"));
		numberOfAbsencesColumn.setStyle("-fx-alignment: CENTER;");
		
		studentsTable.setItems(studyList);
	}
	
	@FXML
	private void initialize() {
		
	}
	
	@FXML
	private void handleRollCall() {
		
	}

	
    private void showErrorAlert(String title, String message) {
        Alert alert = new Alert(Alert.AlertType.ERROR);
        alert.setTitle(title);
        alert.setHeaderText("ERROR");
        alert.setContentText(message);
        alert.showAndWait();
    }
    
    private void showCompletedAlert(String title, String message) {
        Alert alert = new Alert(Alert.AlertType.INFORMATION);
        alert.setTitle(title);
        alert.setHeaderText("Teacher Created Successfully!");
        alert.setContentText(message);
        alert.showAndWait();
    }
    
    public boolean showConfirmation(String title, String message) {
        Alert alert = new Alert(Alert.AlertType.CONFIRMATION);
        alert.setTitle(title);
        alert.setHeaderText(null);
        alert.setContentText(message);

        alert.getButtonTypes().setAll(ButtonType.YES, ButtonType.NO);

        Optional<ButtonType> result = alert.showAndWait();

        return result.isPresent() && result.get() == ButtonType.YES;
    }
}
