package controller.admin.management;

import javafx.collections.FXCollections;

import javafx.collections.ObservableList;
import javafx.fxml.FXML;
import javafx.scene.control.Button;
import javafx.scene.control.ComboBox;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.TextField;
import javafx.scene.control.cell.PropertyValueFactory;
import model.user.User;
import model.user.UserDAO;

public class UsersSceneController {
	@FXML
	private TextField searchTF;
	
	@FXML
	private ComboBox<String> typeSearch;
	
	@FXML
	private TableView<User> usersTable;
	
	@FXML
	private TableColumn<User, String> useridColumn;
	
	@FXML
	private TableColumn<User, String> accountColumn;
	
	@FXML
	private TableColumn<User, String> roleColumn;
	
	@FXML
	private TableColumn<User, String> statusColumn;
	
	@FXML
	private TableColumn<User, String> createdDateColumn;
	
	@FXML
	private Button addButton;
	
	@FXML
	private Button updateButton;
	
	@FXML
	private Button deleteButton;
	
	@FXML
	private Button detailButton;
	
	@FXML
	private Button ActiveOrLockedButton;
	
	private ObservableList<User> userList = FXCollections.observableArrayList();
	
	private UserDAO userDAO;
	
	@FXML
	private void initialize() {
		userDAO = new UserDAO();
		userList = userDAO.getAllUsers();
		
		useridColumn.setCellValueFactory(new PropertyValueFactory<>("userid"));
		useridColumn.setStyle("-fx-alignment: CENTER;");
		accountColumn.setCellValueFactory(new PropertyValueFactory<>("account"));
		accountColumn.setStyle("-fx-alignment: CENTER;");
		roleColumn.setCellValueFactory(new PropertyValueFactory<>("role"));
		roleColumn.setStyle("-fx-alignment: CENTER;");
		statusColumn.setCellValueFactory(new PropertyValueFactory<>("status"));
		statusColumn.setStyle("-fx-alignment: CENTER;");
		createdDateColumn.setCellValueFactory(new PropertyValueFactory<>("createdDate"));
		createdDateColumn.setStyle("-fx-alignment: CENTER;");
		
		usersTable.setItems(userList);
		
		typeSearch.getItems().addAll("User ID", "Full Name");
		typeSearch.setValue("User ID");
		
		searchTF.textProperty().addListener((observable, oldValue, newValue) -> filterUsers(newValue));
		
	}
	
	@FXML
	private void handleDetail() {
		
	}
	
	private void filterUsers(String searchText) {
	    if (searchText == null || searchText.isEmpty()) {
	        usersTable.setItems(userList); // Không lọc nếu ô tìm kiếm trống
	        return;
	    }

	    String selectedType = typeSearch.getValue(); // Lấy giá trị của ComboBox

	    ObservableList<User> filteredList = FXCollections.observableArrayList();

	    for (User user : userList) {
	        if (selectedType.equals("User ID") && user.getUserid().toLowerCase().contains(searchText.toLowerCase())) {
	            filteredList.add(user);
	        } else if (selectedType.equals("Full Name") && user.getAccount().toLowerCase().contains(searchText.toLowerCase())) {
	            filteredList.add(user);
	        }
	    }

	    usersTable.setItems(filteredList);
	}

	
}
