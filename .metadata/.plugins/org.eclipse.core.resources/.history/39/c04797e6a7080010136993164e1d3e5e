package controller.student.courses.all;

import java.io.IOException;

import controller.student.courses.course_item.CourseItemController;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.control.ComboBox;
import javafx.scene.control.TextField;
import javafx.scene.layout.AnchorPane;
import javafx.scene.layout.GridPane;
import javafx.scene.text.Text;
import model.course.Course;
import model.course.CourseDAO;

public class AllSceneController {
	
	@FXML
	private TextField searchTF;
	
	@FXML
	private ComboBox<String> typeSearchCB;
	
	@FXML
	private Text prevPage;
	
	@FXML
	private Text lastPage;
	
	@FXML
	private GridPane grid;
	
	private CourseDAO courseDAO = new CourseDAO();
	
	private ObservableList<Course> courseList = FXCollections.observableArrayList();
	
	@FXML
	public void initialize() {
		courseList = courseDAO.getAllCourses();
		System.out.println(courseList);
        addCoursesToGrid(courseList);
        
        
		typeSearchCB.getItems().addAll("Course ID", "Subject Name", "Teacher", "Course Start Date");
		typeSearchCB.setValue("Course ID");
		
		searchTF.textProperty().addListener((observable, oldValue, newValue) -> filterCourses(newValue));
        
    }

    private void addCoursesToGrid(ObservableList<Course> courseList) {
        
        int row = 0;
        int col = 0;
        
        for(Course course : courseList) {
        	try {
                // Load tệp FXML
                FXMLLoader loader = new FXMLLoader(getClass().getResource("/view/student/courses/course_item/CourseItem.fxml"));
                AnchorPane courseItem = loader.load();

                // Lấy Controller để cập nhật dữ liệu
                CourseItemController controller = loader.getController();
                controller.setData(course);

                // Thêm vào GridPane
                grid.add(courseItem, col, row);
                col++;
                if (col == 4) { // Mỗi hàng tối đa 2 cột
                    col = 0;
                    row++;
                }
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }
    
	private void filterCourses(String searchText) {
	    if (searchText == null || searchText.isEmpty()) {
	    	addCoursesToGrid(courseList); // Không lọc nếu ô tìm kiếm trống
	        return;
	    }

	    String selectedType = typeSearchCB.getValue(); // Lấy giá trị của ComboBox

	    ObservableList<Course> filteredList = FXCollections.observableArrayList();

	    for (Course course : courseList) {
	        if (selectedType.equals("Course ID") && course.getCourseid().toLowerCase().contains(searchText.toLowerCase())) {
	            filteredList.add(course);
	        } else if (selectedType.equals("Subject Name") && course.getSubject().getName().toLowerCase().contains(searchText.toLowerCase())) {
	            filteredList.add(course);
	        } else if (selectedType.equals("Teacher") && course.getTeacher().getFullName().toLowerCase().contains(searchText.toLowerCase())) {
	            filteredList.add(course);
	        } else if (selectedType.equals("Course Start Date") && course.getCourseStartDate().toLowerCase().contains(searchText.toLowerCase())) {
	            filteredList.add(course);
	        }
	    }

	    coursesTable.setItems(filteredList);
	}

}
