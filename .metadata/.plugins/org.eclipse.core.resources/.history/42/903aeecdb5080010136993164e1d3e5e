package controller.other;

import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.control.PasswordField;
import javafx.scene.control.TextField;
import javafx.stage.Stage;
import model.user.User;
import model.user.UserDAO;
import model.user_login.UserLogin;

import java.io.IOException;

import hash_password.HashPassword;

public class LoginController {

    @FXML
    private TextField accountTF;

    @FXML
    private PasswordField passwordTF;

    @FXML
    private Button logInButton;

    private UserDAO userDAO = new UserDAO();

    @FXML
    private void handleLogin() {
        String account = accountTF.getText();
        String password = passwordTF.getText();
        
        if (account.isEmpty() || password.isEmpty()) {
            showAlert("Lỗi", "Vui lòng nhập đầy đủ thông tin!");
            return;
        }

        User user = userDAO.getUserByAccount(account);

        if (user == null) {
            showAlert("Lỗi", "Tài khoản không tồn tại!");
        } else if (!HashPassword.checkPassword(password, user.getPassword())) {
            showAlert("Lỗi", "Sai mật khẩu!");
        } else if(user.getStatus().equals("locked")) {
        	showAlert("Lỗi", "Tài khoản này đã bị khóa!");
        } else if(user.getRole().equals("Admin")) {
        	UserLogin.setUserid(user.getUserid());
        	openAdminView();
        } else if(user.getRole().equals("Teacher")) {
        	UserLogin.setUserid(user.getUserid());
        	openTeacherView();
        } else if(user.getRole().equals("Student")) {
        	UserLogin.setUserid(user.getUserid());
        	openStudentView();
        } 
        System.out.println(user.getAccount());
        System.out.println("Login: " + UserLogin.getUserid());
    }
    
    @FXML
    private void handleRegister() {
        try {
            FXMLLoader loader = new FXMLLoader(getClass().getResource("/view/other/RegisterView.fxml"));
            Stage stage = (Stage) logInButton.getScene().getWindow();
            stage.setScene(new Scene(loader.load()));
            stage.setTitle("Register");
            stage.show();
        } catch (IOException e) {
            e.printStackTrace();
            showAlert("Error", "Can not open Register View");
        }
    }

    private void openAdminView() {
        try {
            FXMLLoader loader = new FXMLLoader(getClass().getResource("/view/admin/AdminView.fxml"));
            Stage stage = (Stage) logInButton.getScene().getWindow();
            stage.setScene(new Scene(loader.load()));
            stage.setTitle("Admin View");
            stage.show();
        } catch (IOException e) {
            e.printStackTrace();
            showAlert("Lỗi", "Không thể mở giao diện chính!");
        }
    }
    
    private void openTeacherView() {
        try {
            FXMLLoader loader = new FXMLLoader(getClass().getResource("/view/teacher/TeacherView.fxml"));
            Stage stage = (Stage) logInButton.getScene().getWindow();
            stage.setScene(new Scene(loader.load()));
            stage.setTitle("Admin View");
            stage.show();
        } catch (IOException e) {
            e.printStackTrace();
            showAlert("Lỗi", "Không thể mở giao diện chính!");
        }
    }
    
    private void openStudentView() {
        try {
            FXMLLoader loader = new FXMLLoader(getClass().getResource("/view/student/StudentView.fxml"));
            Stage stage = (Stage) logInButton.getScene().getWindow();
            stage.setScene(new Scene(loader.load()));
            stage.setTitle("Admin View");
            stage.show();
        } catch (IOException e) {
            e.printStackTrace();
            showAlert("Lỗi", "Không thể mở giao diện chính!");
        }
    }

    private void showAlert(String title, String message) {
        Alert alert = new Alert(Alert.AlertType.ERROR);
        alert.setTitle(title);
        alert.setHeaderText(null);
        alert.setContentText(message);
        alert.showAndWait();
    }
}
