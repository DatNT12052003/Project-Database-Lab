package controller.student.courses.course_item;

import controller.admin.management.schedules.SchedulesSceneController;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.fxml.FXML;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.text.Text;
import javafx.stage.Stage;
import model.course.Course;
import model.course.CourseDAO;
import model.person.Student;
import model.person.TeacherDAO;
import model.room.RoomDAO;
import model.schedule.Schedule;
import model.schedule.ScheduleDAO;
import model.study.StudyDAO;
import model.subject.SubjectDAO;
import model.user_login.UserLogin;

public class DetailCoursePopUpController {
	
	private Course courseItem;
	
	@FXML
	private Text courseidText;
	
	@FXML
	private Text subjectNameText;
	
	@FXML
	private Text massText;
	
	@FXML
	private Text tuitionText;
	
	@FXML
	private Text teacherNameText;
	
	@FXML
	private Text levelText;
	
	@FXML
	private Text phoneText;
	
	@FXML
	private Text emailText;
	
	@FXML
	private Text teacherAddressText;
	
	@FXML
	private Text currentStudentsText;
	
	@FXML
	private Text maxStudentsText;
	
	@FXML
	private Text startDateText;
	
	@FXML
	private Text roomAddressText;
	
	@FXML
	private Text typeText;
	
	
	@FXML
	private TableView<Schedule> schedulesTable;
	
	@FXML
	private TableColumn<Schedule, String> dayColumn;
	
	@FXML
	private TableColumn<Schedule, String> timeStartColumn;
	
	@FXML
	private TableColumn<Schedule, String> timeEndColumn;
	
	
	@FXML
	private TableView<Student> studentsRegisterdTable;
	
	@FXML
	private TableColumn<Schedule, String> scheduleidColumn;
	
	@FXML
	private TableColumn<Schedule, String> fullNameColumn;
	
	@FXML
	private TableColumn<Schedule, String> addressColumn;
	
	@FXML
	private Button registerButton;
	
	private CourseDAO courseDAO = new CourseDAO();
	
	private TeacherDAO teacherDAO = new TeacherDAO();
	
	private SubjectDAO subjectDAO = new SubjectDAO();
	
	private RoomDAO roomDAO = new RoomDAO();
	
	private ScheduleDAO scheduleDAO = new ScheduleDAO();
	
	private StudyDAO studyDAO = new StudyDAO();
	
	private ObservableList<Schedule> scheduleList = FXCollections.observableArrayList();
	
    private CourseItemController courseItemController;

    public void setCourseItemController(CourseItemController courseItemController) {
        this.courseItemController = courseItemController;
    }
	
	public CourseItemController getCourseItemController() {
		return courseItemController;
	}
	
	
	public void setData(Course courseItem) {
		this.courseItem = courseItem;
		
		courseidText.setText(courseItem.getCourseid());
		currentStudentsText.setText(String.valueOf(courseItem.getCurrentStudents()));
		maxStudentsText.setText(String.valueOf(roomDAO.getRoomById(courseItem.getRoom().getRoomid()).getMaxStudents()));
		startDateText.setText(courseItem.getCourseStartDate());
		
		subjectNameText.setText(subjectDAO.getSubjectById(courseItem.getSubject().getSubjectid()).getName());
		massText.setText(String.valueOf(subjectDAO.getSubjectById(courseItem.getSubject().getSubjectid()).getMass()));
		tuitionText.setText(String.valueOf(subjectDAO.getSubjectById(courseItem.getSubject().getSubjectid()).getTuition()));
		
		teacherNameText.setText(teacherDAO.getTeacherById(courseItem.getTeacher().getTeacherid()).getFullName());
		levelText.setText(teacherDAO.getTeacherById(courseItem.getTeacher().getTeacherid()).getLevel());
		phoneText.setText(teacherDAO.getTeacherById(courseItem.getTeacher().getTeacherid()).getPhone());
		emailText.setText(teacherDAO.getTeacherById(courseItem.getTeacher().getTeacherid()).getEmail());
		teacherAddressText.setText(teacherDAO.getTeacherById(courseItem.getTeacher().getTeacherid()).getAddress());
		
		roomAddressText.setText(roomDAO.getRoomById(courseItem.getRoom().getRoomid()).getAddress());
		typeText.setText(roomDAO.getRoomById(courseItem.getRoom().getRoomid()).getType());
		
		System.out.println(courseItem.getCourseid());
		scheduleList = scheduleDAO.getScheduleByCourseid(courseItem.getCourseid());
		System.out.println(scheduleList);
		
		dayColumn.setCellValueFactory(new PropertyValueFactory<>("day"));
		dayColumn.setStyle("-fx-alignment: CENTER;");
		timeStartColumn.setCellValueFactory(new PropertyValueFactory<>("timeStart"));
		timeStartColumn.setStyle("-fx-alignment: CENTER;");
		timeEndColumn.setCellValueFactory(new PropertyValueFactory<>("timeEnd"));
		timeEndColumn.setStyle("-fx-alignment: CENTER;");
		
		schedulesTable.setItems(scheduleList);
		
	}
	
	@FXML
	private void initialize() {
		
	}
	
	@FXML
	private void handleRegister() {
		if(studyDAO.getStudentidByCourseid(UserLogin.getUserid())==null) {
			studyDAO.insertStudy(UserLogin.getUserid(), courseItem.getCourseid());
			showCompletedAlert("Complete", "Register course completed!");
			((Stage) registerButton.getScene().getWindow()).close();
		}else {
			showErrorAlert("Error", "You registerd this course!");
			((Stage) registerButton.getScene().getWindow()).close();
		}
	}
	
    private void showErrorAlert(String title, String message) {
        Alert alert = new Alert(Alert.AlertType.ERROR);
        alert.setTitle(title);
        alert.setHeaderText("ERROR");
        alert.setContentText(message);
        alert.showAndWait();
    }
    
    private void showCompletedAlert(String title, String message) {
        Alert alert = new Alert(Alert.AlertType.INFORMATION);
        alert.setTitle(title);
        alert.setHeaderText("Teacher Created Successfully!");
        alert.setContentText(message);
        alert.showAndWait();
    }
}
