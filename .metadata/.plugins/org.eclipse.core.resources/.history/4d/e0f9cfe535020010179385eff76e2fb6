package model.person;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import connection_database.DatabaseConnection;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;

public class TeacherDAO {

	private int getCountTeachers() {
		int count = 0;
		String sql = "SELECT COUNT(*) FROM teachers";
		
		try(Connection conn = DatabaseConnection.getConnection();
	             Statement stmt = conn.createStatement();
	             ResultSet result = stmt.executeQuery(sql)){
			
			if (result.next()) {
                count = result.getInt(1);
            }

		}catch(SQLException e) {
			e.printStackTrace();
		}
		return count;
	}
	
    public String generateTeacherID() {
        int count = getCountTeachers() + 1; 
        return String.format("T%09d", count);
    }
    
	public ObservableList<Teacher> getAllTeachers() {
        String sql = "SELECT * FROM teachers";
        ObservableList<Teacher> teacherList = FXCollections.observableArrayList();

        try (Connection conn = DatabaseConnection.getConnection();
             Statement stmt = conn.createStatement();
             ResultSet resultSet = stmt.executeQuery(sql)) {

            while (resultSet.next()) {
                Teacher teacher = new Teacher();
                teacher.setTeacherid(resultSet.getString("teacherid"));  
                teacher.setFullName(resultSet.getString("fullname")); 
                teacher.setDateOfBirth(resultSet.getString("dateofbirth")); 
                teacher.setGender(resultSet.getString("gender"));  
                teacher.setPhone(resultSet.getString("phone"));  
                teacher.setEmail(resultSet.getString("email")); 
                teacher.setExpertise(resultSet.getString("expertise")); 
                teacher.setLevel(resultSet.getString("level")); 
                teacher.setSalary(resultSet.getInt("salary")); 
                
                teacherList.add(teacher); 
            }

        } catch (SQLException e) {
            e.printStackTrace();
        }
        return teacherList;
    }
	
	public void insertTeacher(String teacherid, String fullName, String dateOfBirth, String gender, String phone, String email, String expertise, String level, int salary) {
		String sql = "INSERT INTO teachers (teacherid, fullname, dateofbirth, gender, phone, email, expertise, level, salary) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)";
		
	    try (Connection conn = DatabaseConnection.getConnection();
		         PreparedStatement pstmt = conn.prepareStatement(sql)) {

		        pstmt.setString(1, teacherid);
		        pstmt.setString(2, fullName);
		        pstmt.setString(3, dateOfBirth);
		        pstmt.setString(4, gender);
		        pstmt.setString(5, phone);
		        pstmt.setString(6, email);
		        pstmt.setString(7, expertise);
		        pstmt.setString(8, level);
		        pstmt.setInt(9, salary);
		        
		        int affectedRows = pstmt.executeUpdate();
		        
	            if (affectedRows > 0) {
	                System.out.println("Insert completed!");
	            } else {
	                System.out.println("Error insert!");
	            }
		    } catch (SQLException e) {
		        e.printStackTrace();
		    }
	}
}
