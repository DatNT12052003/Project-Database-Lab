package controller.admin.management.teachers;

import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

import hash_password.HashPassword;
import javafx.fxml.FXML;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.control.ComboBox;
import javafx.scene.control.DatePicker;
import javafx.scene.control.PasswordField;
import javafx.scene.control.RadioButton;
import javafx.scene.control.TextField;
import javafx.scene.text.Text;
import javafx.stage.Stage;
import model.person.Teacher;
import model.person.TeacherDAO;
import model.user.User;
import model.user.UserDAO;

public class UpdateTeacherPopUpController {
	
    private TeachersSceneController teachersSceneController;

    public void setTeachersSceneController(TeachersSceneController teachersSceneController) {
        this.teachersSceneController = teachersSceneController;
    }
	
	public TeachersSceneController getTeachersSceneController() {
		return teachersSceneController;
	}
	
	@FXML
	private TextField fullNameTF;
	
	@FXML
	private DatePicker dobDP;
	
	@FXML
	private RadioButton maleRB;
	
	@FXML
	private RadioButton femaleRB;
	
	@FXML
	private TextField phoneTF;
	
	@FXML
	private TextField emailTF;
	
	@FXML
	private TextField expertiseTF;
	
	@FXML
	private TextField levelTF;
	
	@FXML
	private TextField salaryTF;
	
	@FXML
	private Text fullNameText;

	@FXML
	private Text dobText;

	@FXML
	private Text genderText;

	@FXML
	private Text phoneText;

	@FXML
	private Text emailText;

	@FXML
	private Text expertiseText;

	@FXML
	private Text levelText;

	@FXML
	private Text salaryText;

	@FXML
	private Button okButton;
	
	private Teacher teacher;
	
	private TeacherDAO teacherDAO = new TeacherDAO();
	
	public void setTeacher(Teacher teacher) {
		this.teacher = teacher;
		fullNameText.setText(teacher.getFullName());
		dobText.setText(teacher.getDateOfBirth()); // Chuyển đổi LocalDate sang chuỗi
		genderText.setText(teacher.getGender()); // Giả sử có phương thức kiểm tra giới tính
		phoneText.setText(teacher.getPhone());
		emailText.setText(teacher.getEmail());
		expertiseText.setText(teacher.getExpertise());
		levelText.setText(teacher.getLevel());
		salaryText.setText(String.valueOf(teacher.getSalary())); // Chuyển đổi số sang chuỗi
	}
	
	@FXML
	private void initialize() {
		
	}
	
	@FXML
	private void handleOk() {
		String account = accountTF.getText();
		String password = passwordTF.getText();
		String role = roleCB.getValue().toLowerCase();
		
		String userid = "";
		
		if(role.equals(user.getRole())) {
			userid = user.getUserid();
		} else {
			if(role.equals("teacher")) {
				userid = userDAO.generateTeacherID();
			} else {
				userid = userDAO.generateStudentID();
			}
		}
		
        LocalDateTime now = LocalDateTime.now();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
        String formattedDateTime = now.format(formatter);
		
		if(account.isEmpty() || password.isEmpty()) {
			showErrorAlert("Error", "Not enough information has been entered!");
		} else {
			userDAO.updateUser(userid, account, HashPassword.hashSHA256(password), role, "active", formattedDateTime);
			String message = "Account: " + account + "\n"
					+ "Password: " + password + "\n"
                    + "Role: " + role + "\n";
			showCompletedAlert("Success", message);
			
	        ((Stage) okButton.getScene().getWindow()).close();
		}
	}
	
    private void showErrorAlert(String title, String message) {
        Alert alert = new Alert(Alert.AlertType.ERROR);
        alert.setTitle(title);
        alert.setHeaderText(null);
        alert.setContentText(message);
        alert.showAndWait();
    }
    
    private void showCompletedAlert(String title, String message) {
        Alert alert = new Alert(Alert.AlertType.INFORMATION);
        alert.setTitle(title);
        alert.setHeaderText("Account Updated Successfully!");
        alert.setContentText(message);
        alert.showAndWait();
    }
	
}
